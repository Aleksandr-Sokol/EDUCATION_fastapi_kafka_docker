version: '3.3'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3.7.0'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./bitnami/zookeeper:/bitnami/zookeeper

  kafka:
    image: 'bitnami/kafka:2.8.0'
    container_name: kafka
    ports:
      - "9093:9093"
      - "9092:9092"
    expose:
      - "9093"
      - "9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - ./bitnami/kafka:/bitnami/kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
     - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

  producer:
    build:
      context: .
      dockerfile: ./producer/Dockerfile
    command: uvicorn app:app --reload --workers 1 --host 0.0.0.0 --port 8000
    ports:
      - '5005:8000'
#    environment:
#      - KAFKA_HOST=kafka
#      - KAFKA_PORT=9093
    depends_on:
      - kafka
      - zookeeper
      - kafdrop

  consumer:
    build:
      context: .
      dockerfile: ./consumer/Dockerfile
    command: uvicorn app:app --reload --host 0.0.0.0 --port 5006
    ports:
      - '5006:5006'
    expose:
      - "9092"
#    environment:
#      - KAFKA_HOST=kafka
#      - KAFKA_PORT=9092
#      - KAFKA_TOPIC=kafka_message
    depends_on:
      - producer
      - kafka
      - zookeeper
      - kafdrop
    volumes:
      - ./sqlite_db:/app/sqlite_db

networks:
  kafka_bridge:
    driver: bridge